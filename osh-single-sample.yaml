---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: helm-toolkit
data:
  chart_name: helm-toolkit
  release: helm-toolkit
  namespace: helm-tookit
  values: {}
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-skt
    subpath: helm-toolkit
    reference: master
  dependencies: []
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ingress
data:
  chart_name: ingress
  release: ingress
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        entrypoint: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
        ingress: registry.cicd.stg.taco/nginx-ingress-controller:0.9.0
        error_pages: registry.cicd.stg.taco/defaultbackend:1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    network:
      host_namespace: true
    config:
      worker-processes: "8"
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    pod:
      replicas:
        ingress: 1
        error_page: 1
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: ingress
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ceph-client
data:
  chart_name: ceph-client
  release: ceph-client
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        ceph_bootstrap: registry.cicd.stg.taco/ceph-daemon:tag-build-master-jewel-ubuntu-16.04
        ceph_cephfs_provisioner: registry.cicd.stg.taco/cephfs-provisioner:v0.1.1
        ceph_config_helper: registry.cicd.stg.taco/ceph-config-helper:v1.7.5
        ceph_rbd_provisioner: registry.cicd.stg.taco/rbd-provisioner:v0.1.1
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.1
        ks_user: registry.cicd.stg.taco/heat:pike
        ks_service: registry.cicd.stg.taco/heat:pike
        ks_endpoints: registry.cicd.stg.taco/heat:pike
      pull_policy: IfNotPresent
    deployment:
      client_secrets: false
      rbd_provisioner: false
      cephfs_provisioner: false
      rgw_keystone_user_and_endpoints: false
    conf:
      ceph:
        global:
          mon_host: 192.168.54.21
    manifests:
        configmap_bin: true
        configmap_bin_ks: true
        configmap_bin_common: true
        configmap_etc: true
        deployment_mds: false
        deployment_rbd_provisioner: false
        deployment_cephfs_provisioner: false
        deployment_rgw: false
        deployment_mgr: false
        job_bootstrap: false
        job_cephfs_client_key: false
        job_ks_endpoints: false
        job_ks_service: false
        job_ks_user: false
        job_namespace_client_key_cleaner: false
        job_namespace_client_key: false
        job_rbd_pool: false
        secret_keystone_rgw: false
        secret_keystone: false
        service_mgr: false
        service_rgw: false
        storageclass_cephfs: false
        storageclass_rbd: false
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: ceph-client
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: mariadb
data:
  chart_name: mariadb
  release: mariadb
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        mariadb: registry.cicd.stg.taco/mariadb:10.1.23
        test: registry.cicd.stg.taco/pike/ubuntu-source-kolla-toolbox:develop
      pull_policy: Always
    pod:
      replicas:
        server: 1
    volume:
      enabled: true
      class_name: ceph
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: mariadb
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: etcd
data:
  chart_name: etcd
  release: etcd
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        etcd: registry.cicd.stg.taco/etcd:v3.2.5 
        test: registry.cicd.stg.taco/pike/ubuntu-source-kolla-toolbox:develop
      pull_policy: IfNotPresent
    pod:
      replicas:
        etcd: 1
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: etcd
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: rabbitmq
data:
  chart_name: rabbitmq
  release: rabbitmq
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        rabbitmq: registry.cicd.stg.taco/rabbitmq:3.7
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
        test: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 1
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    volume:
      class_name: ceph
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: rabbitmq
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: memcached
data:
  chart_name: memcached
  release: memcached
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    images:
      tags:
        memcached: registry.cicd.stg.taco/memcached:1.5.5
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: IfNotPresent
    pod:
      replicas:
        server: 1
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: memcached
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: libvirt
data:
  chart_name: libvirt
  release: libvirt
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    release_group: null
    labels:
      agent:
        libvirt:
          node_selector_key: stage-ovs-tenant
          node_selector_value: enabled
    images:
      tags:
        libvirt: registry.cicd.stg.taco/pike/ubuntu-source-nova-libvirt:0.1.0
      pull_policy: Always
    conf:
      ceph:
        enabled: true
        admin_keyring: "AQCqEUVY3RvrBRAABmhtxK2MvD/whiiVZ5Jkww=="
        cinder:
          user: "cinder"
          keyring: "AQASCkZY1nD5KBAAPIP81ViLXzAYC+Xm3pqY/Q=="
          secret_uuid: "582393ff-9a5c-4a2e-ae0d-86ec18c36afc"
      libvirt:
        listen_addr: 0.0.0.0
        log_level: 3
    manifests:
      configmap_bin: true
      configmap_etc: true
      daemonset_libvirt: true
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: libvirt
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: openvswitch
data:
  chart_name: openvswitch
  release: openvswitch
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    release_group: null
    images:
      tags:
        openvswitch_db_server: registry.cicd.stg.taco/pike/ubuntu-source-openvswitch-db-server:0.1.0
        openvswitch_vswitchd: registry.cicd.stg.taco/pike/ubuntu-source-openvswitch-vswitchd:0.1.0
      pull_policy: Always
    labels:
      ovs:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: openvswitch
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: keystone
data:
  chart_name: keystone
  release: keystone
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: keystone-bootstrap
          type: job
          labels:
            application: keystone
            component: bootstrap
        - name: keystone-credential-setup
          type: job
          labels:
            application: keystone
            component: credential-setup
        - name: keystone-db-init
          type: job
          labels:
            application: keystone
            component: db-init
        - name: keystone-db-sync
          type: job
          labels:
            application: keystone
            component: db-sync
        - name: keystone-fernet-setup
          type: job
          labels:
            application: keystone
            component: fernet-setup
        - name: keystone-domain-manage
          type: job
          labels:
            application: keystone
            component: domain-manage
  values:
    images:
      tags:
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        keystone_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        keystone_fernet_setup: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        keystone_fernet_rotate: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        keystone_credential_setup: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        keystone_credential_rotate: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        keystone_api: registry.cicd.stg.taco/pike/ubuntu-source-keystone:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    conf:
      keystone:
        DEFAULT:
          debug: true
    pod:
      replicas:
        api: 1
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: keystone
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: glance
data:
  chart_name: glance
  release: glance
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: glance-bootstrap
          type: job
          labels:
            application: glance
            component: bootstrap
        - name: glance-storage-init
          type: job
          labels:
            application: glance
            component: storage-init
        - name: glance-db-init
          type: job
          labels:
            application: glance
            component: db-init
        - name: glance-db-sync
          type: job
          labels:
            application: glance
            component: db-sync
        - name: glance-ks-endpoints
          type: job
          labels:
            application: glance
            component: ks-endpoints
        - name: glance-ks-service
          type: job
          labels:
            application: glance
            component: ks-service
        - name: glance-ks-user
          type: job
          labels:
            application: glance
            component: ks-user
  values:
    storage: rbd
    images:
      tags:
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        glance_storage_init: registry.cicd.stg.taco/ceph-daemon:tag-build-master-jewel-ubuntu-16.04
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        glance_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-glance-api:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_user: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_service: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_endpoints: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        glance_api: registry.cicd.stg.taco/pike/ubuntu-source-glance-api:0.1.0
        glance_registry: registry.cicd.stg.taco/pike/ubuntu-source-glance-registry:0.1.0
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    pod:
      replicas:
        api: 1
        registry: 1
      user:
        glance:
          uid: 42415
    network:
      api:
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 102400M
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    conf:
      ceph:
        enabled: true
        admin_keyring: "AQCqEUVY3RvrBRAABmhtxK2MvD/whiiVZ5Jkww=="
      glance:
        glance_store:
          rbd_store_user: glance
          rbd_store_pool: images-test
        DEFAULT:
          show_image_direct_url: true
    bootstrap:
      enabled: true
      structured:
        images:
          cirros:
            id: 201084fc-c276-4744-8504-cb974dbb3610
            private: false
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: glance
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: nova
data:
  chart_name: nova
  release: nova
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: nova-bootstrap
          type: job
          labels:
            application: nova
            component: bootstrap
        - name: nova-cell-setup
          type: job
          labels:
            application: nova
            component: cell-setup
        - name: nova-db-init
          type: job
          labels:
            application: nova
            component: db-init
        - name: nova-db-sync
          type: job
          labels:
            application: nova
            component: db-sync
        - name: nova-ks-endpoints
          type: job
          labels:
            application: nova
            component: ks-endpoints
        - name: nova-ks-service
          type: job
          labels:
            application: nova
            component: ks-service
        - name: nova-ks-user
          type: job
          labels:
            application: nova
            component: ks-user
        - name: placement-ks-endpoints
          type: job
          labels:
            application: placement
            component: ks-endpoints
        - name: placement-ks-service
          type: job
          labels:
            application: placement
            component: ks-service
        - name: placement-ks-user
          type: job
          labels:
            application: placement
            component: ks-user
  values:
    labels:
      agent:
        compute:
          node_selector_key: stage-ovs-tenant
          node_selector_value: enabled
        libvirt:
          node_selector_key: stage-ovs-tenant
          node_selector_value: enabled
      conductor:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      consoleauth:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      scheduler:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      osapi:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      api_metadata:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      job:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
      novncproxy:
        node_selector_key: stage-ovs-tenant
        node_selector_value: enabled
    images:
      tags:
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        ks_user: registry.cicd.stg.taco/pike/ubuntu-source-kolla-toolbox:0.1.0
        ks_service: registry.cicd.stg.taco/pike/ubuntu-source-kolla-toolbox:0.1.0
        ks_endpoints: registry.cicd.stg.taco/pike/ubuntu-source-kolla-toolbox:0.1.0
        nova_api: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        nova_cell_setup: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        nova_compute: registry.cicd.stg.taco/pike/ubuntu-source-nova-compute:0.1.0
        nova_compute_ironic: registry.cicd.stg.taco/pike/ubuntu-source-nova-compute-ironic:0.1.0
        nova_compute_ssh: registry.cicd.stg.taco/pike/ubuntu-source-nova-ssh:0.1.0
        nova_conductor: registry.cicd.stg.taco/pike/ubuntu-source-nova-conductor:0.1.0
        nova_consoleauth: registry.cicd.stg.taco/pike/ubuntu-source-nova-consoleauth:0.1.0
        nova_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        nova_novncproxy: registry.cicd.stg.taco/pike/ubuntu-source-nova-novncproxy:0.1.0
        nova_novncproxy_assets: registry.cicd.stg.taco/pike/ubuntu-source-nova-novncproxy:0.1.0
        nova_placement: registry.cicd.stg.taco/pike/ubuntu-source-nova-placement-api:0.1.0
        nova_scheduler: registry.cicd.stg.taco/pike/ubuntu-source-nova-scheduler:0.1.0
        nova_spiceproxy: registry.cicd.stg.taco/pike/ubuntu-source-nova-spicehtml5proxy:0.1.0
        nova_spiceproxy_assets: registry.cicd.stg.taco/pike/ubuntu-source-nova-spicehtml5proxy:0.1.0
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-nova-api:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    bootstrap:
      structured:
        flavors:
          enabled: true
          options:
            m1_tiny:
              id: 0c84e220-a258-439f-a6ff-f8e9fd980025
    network:
      novncproxy:
        name: "nova-novncproxy"
        node_port:
          enabled: true
          port: 30608
        port: 6080
        targetPort: 6080
    conf:
      rootwrap_filters:
        api_metadata:
          override:
          append:
        compute:
          override: |
            # nova-rootwrap command filters for compute nodes
            # This file should be owned by (and only-writeable by) the root user
            [Filters]
            # nova/virt/disk/mount/api.py: 'kpartx', '-a', device
            # nova/virt/disk/mount/api.py: 'kpartx', '-d', device
            kpartx: CommandFilter, kpartx, root
            # nova/virt/xenapi/vm_utils.py: tune2fs, -O ^has_journal, part_path
            # nova/virt/xenapi/vm_utils.py: tune2fs, -j, partition_path
            tune2fs: CommandFilter, tune2fs, root
            # nova/virt/disk/mount/api.py: 'mount', mapped_device
            # nova/virt/disk/api.py: 'mount', '-o', 'bind', src, target
            # nova/virt/xenapi/vm_utils.py: 'mount', '-t', 'ext2,ext3,ext4,reiserfs'..
            # nova/virt/configdrive.py: 'mount', device, mountdir
            mount: CommandFilter, mount, root
            # nova/virt/disk/mount/api.py: 'umount', mapped_device
            # nova/virt/disk/api.py: 'umount' target
            # nova/virt/xenapi/vm_utils.py: 'umount', dev_path
            # nova/virt/configdrive.py: 'umount', mountdir
            umount: CommandFilter, umount, root
            # nova/virt/disk/mount/nbd.py: 'qemu-nbd', '-c', device, image
            # nova/virt/disk/mount/nbd.py: 'qemu-nbd', '-d', device
            qemu-nbd: CommandFilter, qemu-nbd, root
            # nova/virt/disk/mount/loop.py: 'losetup', '--find', '--show', image
            # nova/virt/disk/mount/loop.py: 'losetup', '--detach', device
            losetup: CommandFilter, losetup, root
            # nova/virt/disk/vfs/localfs.py: 'blkid', '-o', 'value', '-s', 'TYPE', device
            blkid: CommandFilter, blkid, root
            # nova/virt/libvirt/utils.py: 'blockdev', '--getsize64', path
            # nova/virt/disk/mount/nbd.py: 'blockdev', '--flushbufs', device
            blockdev: RegExpFilter, blockdev, root, blockdev, (--getsize64|--flushbufs), /dev/.*
            # nova/virt/disk/vfs/localfs.py: 'tee', canonpath
            # nova/virt/libvirt/guest.py: 'tee',
            # nova/virt/libvirt/vif.py: utils.execute('tee',
            tee: CommandFilter, tee, root
            # nova/virt/disk/vfs/localfs.py: 'mkdir', canonpath
            mkdir: CommandFilter, mkdir, root
            # nova/virt/disk/vfs/localfs.py: 'chown'
            # nova/virt/libvirt/utils.py: def chown(): execute('chown', owner, path,
            # nova/virt/libvirt/driver.py: 'chown', os.getuid( console_log
            # nova/virt/libvirt/driver.py: 'chown', os.getuid( console_log
            # nova/virt/libvirt/driver.py: 'chown', 'root', basepath('disk')
            chown: CommandFilter, chown, root
            # nova/virt/disk/vfs/localfs.py: 'chmod'
            chmod: CommandFilter, chmod, root
            # nova/virt/libvirt/vif.py: 'ip', 'tuntap', 'add', dev, 'mode', 'tap'
            # nova/virt/libvirt/vif.py: 'ip', 'link', 'set', dev, 'up'
            # nova/virt/libvirt/vif.py: 'ip', 'link', 'delete', dev
            # nova/network/linux_net.py: 'ip', 'addr', 'add', str(floating_ip)+'/32'i..
            # nova/network/linux_net.py: 'ip', 'addr', 'del', str(floating_ip)+'/32'..
            # nova/network/linux_net.py: 'ip', 'addr', 'add', '169.254.169.254/32',..
            # nova/network/linux_net.py: 'ip', 'addr', 'show', 'dev', dev, 'scope',..
            # nova/network/linux_net.py: 'ip', 'addr', 'del/add', ip_params, dev)
            # nova/network/linux_net.py: 'ip', 'addr', 'del', params, fields[-1]
            # nova/network/linux_net.py: 'ip', 'addr', 'add', params, bridge
            # nova/network/linux_net.py: 'ip', '-f', 'inet6', 'addr', 'change', ..
            # nova/network/linux_net.py: 'ip', 'link', 'set', 'dev', dev, 'promisc',..
            # nova/network/linux_net.py: 'ip', 'link', 'add', 'link', bridge_if ...
            # nova/network/linux_net.py: 'ip', 'link', 'set', interface, address,..
            # nova/network/linux_net.py: 'ip', 'link', 'set', interface, 'up'
            # nova/network/linux_net.py: 'ip', 'link', 'set', bridge, 'up'
            # nova/network/linux_net.py: 'ip', 'addr', 'show', 'dev', interface, ..
            # nova/network/linux_net.py: 'ip', 'link', 'set', dev, address, ..
            # nova/network/linux_net.py: 'ip', 'link', 'set', dev, 'up'
            # nova/network/linux_net.py: 'ip', 'route', 'add', ..
            # nova/network/linux_net.py: 'ip', 'route', 'del', .
            # nova/network/linux_net.py: 'ip', 'route', 'show', 'dev', dev
            ip: CommandFilter, ip, root
            # nova/virt/libvirt/vif.py: 'tunctl', '-b', '-t', dev
            # nova/network/linux_net.py: 'tunctl', '-b', '-t', dev
            tunctl: CommandFilter, tunctl, root
            # nova/virt/libvirt/vif.py: 'ovs-vsctl', ...
            # nova/virt/libvirt/vif.py: 'ovs-vsctl', 'del-port', ...
            # nova/network/linux_net.py: 'ovs-vsctl', ....
            ovs-vsctl: CommandFilter, ovs-vsctl, root
            # nova/network/linux_net.py: 'ivs-ctl', ....
            ivs-ctl: CommandFilter, ivs-ctl, root
            # nova/virt/libvirt/vif.py: 'vrouter-port-control', ...
            vrouter-port-control: CommandFilter, vrouter-port-control, root
            # nova/virt/libvirt/vif.py: 'ebrctl', ...
            ebrctl: CommandFilter, ebrctl, root
            # nova/virt/libvirt/vif.py: 'mm-ctl', ...
            mm-ctl: CommandFilter, mm-ctl, root
            # nova/network/linux_net.py: 'ovs-ofctl', ....
            ovs-ofctl: CommandFilter, ovs-ofctl, root
            # nova/virt/libvirt/driver.py: 'dd', if=%s % virsh_output, ...
            dd: CommandFilter, dd, root
            # nova/virt/xenapi/volume_utils.py: 'iscsiadm', '-m', ...
            iscsiadm: CommandFilter, iscsiadm, root
            # nova/virt/libvirt/volume/aoe.py: 'aoe-revalidate', aoedev
            # nova/virt/libvirt/volume/aoe.py: 'aoe-discover'
            aoe-revalidate: CommandFilter, aoe-revalidate, root
            aoe-discover: CommandFilter, aoe-discover, root
            # nova/virt/xenapi/vm_utils.py: parted, --script, ...
            # nova/virt/xenapi/vm_utils.py: 'parted', '--script', dev_path, ..*.
            parted: CommandFilter, parted, root
            # nova/virt/xenapi/vm_utils.py: 'pygrub', '-qn', dev_path
            pygrub: CommandFilter, pygrub, root
            fdisk: CommandFilter, fdisk, root
            # nova/virt/disk/api.py: e2fsck, -f, -p, image
            e2fsck: CommandFilter, e2fsck, root
            # nova/virt/disk/api.py: resize2fs, image
            resize2fs: CommandFilter, resize2fs, root
            iptables-save: CommandFilter, iptables-save, root
            ip6tables-save: CommandFilter, ip6tables-save, root
            # nova/network/linux_net.py: 'ip[6]tables-restore' % (cmd,)
            iptables-restore: CommandFilter, iptables-restore, root
            ip6tables-restore: CommandFilter, ip6tables-restore, root
            # nova/network/linux_net.py: 'arping', '-U', floating_ip, '-A', '-I', ...
            # nova/network/linux_net.py: 'arping', '-U', network_ref['dhcp_server'],..
            arping: CommandFilter, arping, root
            # nova/network/linux_net.py: 'dhcp_release', dev, address, mac_address
            dhcp_release: CommandFilter, dhcp_release, root
            # nova/network/linux_net.py: 'kill', '-9', pid
            # nova/network/linux_net.py: 'kill', '-HUP', pid
            kill_dnsmasq: KillFilter, root, /usr/sbin/dnsmasq, -9, -HUP
            # nova/network/linux_net.py: 'kill', pid
            kill_radvd: KillFilter, root, /usr/sbin/radvd
            # nova/network/linux_net.py: dnsmasq call
            dnsmasq: EnvFilter, env, root, CONFIG_FILE=, NETWORK_ID=, dnsmasq
            # nova/network/linux_net.py: 'radvd', '-C', '%s' % _ra_file(dev, 'conf'..
            radvd: CommandFilter, radvd, root
            # nova/network/linux_net.py: 'brctl', 'addbr', bridge
            # nova/network/linux_net.py: 'brctl', 'setfd', bridge, 0
            # nova/network/linux_net.py: 'brctl', 'stp', bridge, 'off'
            # nova/network/linux_net.py: 'brctl', 'addif', bridge, interface
            brctl: CommandFilter, brctl, root
            # nova/virt/libvirt/utils.py: 'mkswap'
            # nova/virt/xenapi/vm_utils.py: 'mkswap'
            mkswap: CommandFilter, mkswap, root
            # nova/virt/libvirt/utils.py: 'nova-idmapshift'
            nova-idmapshift: CommandFilter, nova-idmapshift, root
            # nova/virt/xenapi/vm_utils.py: 'mkfs'
            # nova/utils.py: 'mkfs', fs, path, label
            mkfs: CommandFilter, mkfs, root
            # nova/virt/libvirt/utils.py: 'qemu-img'
            qemu-img: CommandFilter, qemu-img, root
            # nova/virt/disk/vfs/localfs.py: 'readlink', '-e'
            readlink: CommandFilter, readlink, root
            # nova/virt/disk/api.py:
            mkfs.ext3: CommandFilter, mkfs.ext3, root
            mkfs.ext4: CommandFilter, mkfs.ext4, root
            mkfs.ntfs: CommandFilter, mkfs.ntfs, root
            # nova/virt/libvirt/driver.py:
            lvremove: CommandFilter, lvremove, root
            # nova/virt/libvirt/utils.py:
            lvcreate: CommandFilter, lvcreate, root
            # nova/virt/libvirt/utils.py:
            lvs: CommandFilter, lvs, root
            # nova/virt/libvirt/utils.py:
            vgs: CommandFilter, vgs, root
            # nova/utils.py: read_file_as_root: 'cat', file_path
            # (called from nova/virt/disk/vfs/localfs.py:VFSLocalFS.read_file)
            read_passwd: RegExpFilter, cat, root, cat, (/var|/usr)?/tmp/openstack-vfs-localfs[^/]+/etc/passwd
            read_shadow: RegExpFilter, cat, root, cat, (/var|/usr)?/tmp/openstack-vfs-localfs[^/]+/etc/shadow
            # os-brick needed commands
            read_initiator: ReadFileFilter, /etc/iscsi/initiatorname.iscsi
            multipath: CommandFilter, multipath, root
            # multipathd show status
            multipathd: CommandFilter, multipathd, root
            systool: CommandFilter, systool, root
            vgc-cluster: CommandFilter, vgc-cluster, root
            # os_brick/initiator/connector.py
            drv_cfg: CommandFilter, /opt/emc/scaleio/sdc/bin/drv_cfg, root, /opt/emc/scaleio/sdc/bin/drv_cfg, --query_guid
            # TODO(smcginnis) Temporary fix.
            # Need to pull in os-brick os-brick.filters file instead and clean
            # out stale brick values from this file.
            scsi_id: CommandFilter, /lib/udev/scsi_id, root
            # os_brick.privileged.default oslo.privsep context
            # This line ties the superuser privs with the config files, context name,
            # and (implicitly) the actual python code invoked.
            privsep-rootwrap: RegExpFilter, privsep-helper, root, privsep-helper, --config-file, /etc/(?!\.\.).*, --privsep_context, os_brick.privileged.default, --privsep_sock_path, /tmp/.*
            # nova/virt/libvirt/storage/dmcrypt.py:
            cryptsetup: CommandFilter, cryptsetup, root
            # nova/virt/xenapi/vm_utils.py:
            xenstore-read: CommandFilter, xenstore-read, root
            # nova/virt/libvirt/utils.py:
            rbd: CommandFilter, rbd, root
            # nova/virt/libvirt/utils.py: 'shred', '-n3', '-s%d' % volume_size, path
            shred: CommandFilter, shred, root
            # nova/virt/libvirt/volume/volume.py: 'cp', '/dev/stdin', delete_control..
            cp: CommandFilter, cp, root
            # nova/virt/xenapi/vm_utils.py:
            sync: CommandFilter, sync, root
            # nova/virt/libvirt/imagebackend.py:
            ploop: RegExpFilter, ploop, root, ploop, restore-descriptor, .*
            prl_disk_tool: RegExpFilter, prl_disk_tool, root, prl_disk_tool, resize, --size, .*M$, --resize_partition, --hdd, .*
            # nova/virt/libvirt/utils.py:
            ploop: RegExpFilter, ploop, root, ploop, init, -s, .*, -f, .*, -t, .*, .*
            # nova/virt/libvirt/utils.py: 'xend', 'status'
            xend: CommandFilter, xend, root
            # nova/virt/libvirt/utils.py:
            touch: CommandFilter, touch, root
            # nova/virt/libvirt/volume/vzstorage.py
            pstorage-mount: CommandFilter, pstorage-mount, root
          append:
        network:
          override:
          append:
      ceph:
        enabled: true
        admin_keyring: "AQCqEUVY3RvrBRAABmhtxK2MvD/whiiVZ5Jkww=="
        cinder:
          user: "cinder"
          keyring: "AQASCkZY1nD5KBAAPIP81ViLXzAYC+Xm3pqY/Q=="
          secret_uuid: "582393ff-9a5c-4a2e-ae0d-86ec18c36afc"
      rally_tests:
        run_tempest: false
        tests:
          NovaSecGroup.create_and_delete_secgroups: []
          NovaSecGroup.create_and_list_secgroups: []
          NovaSecGroup.create_and_update_secgroups: []
          NovaAgents.list_agents:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaAggregates.create_and_get_aggregate_details:
            - args:
                availability_zone: nova
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaAggregates.create_and_update_aggregate:
            - args:
                availability_zone: nova
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaAggregates.list_aggregates:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaAvailabilityZones.list_availability_zones:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.create_and_delete_flavor:
            - args:
                disk: 1
                ram: 500
                vcpus: 1
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.create_and_list_flavor_access:
            - args:
                disk: 1
                ram: 500
                vcpus: 1
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.create_flavor:
            - args:
                disk: 1
                ram: 500
                vcpus: 1
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.create_flavor_and_add_tenant_access:
            - args:
                disk: 1
                ram: 500
                vcpus: 1
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.create_flavor_and_set_keys:
            - args:
                disk: 1
                extra_specs:
                  'quota:disk_read_bytes_sec': 10240
                ram: 500
                vcpus: 1
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaFlavors.list_flavors:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHosts.list_hosts:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHypervisors.list_and_get_hypervisors:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHypervisors.list_and_get_uptime_hypervisors:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHypervisors.list_and_search_hypervisors:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHypervisors.list_hypervisors:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaHypervisors.statistics_hypervisors:
            - args: {}
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaImages.list_images:
            - args:
                detailed: true
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaKeypair.create_and_delete_keypair:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaKeypair.create_and_list_keypairs:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaServerGroups.create_and_list_server_groups:
            - args:
                all_projects: false
                kwargs:
                  policies:
                    - affinity
              runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
          NovaServices.list_services:
            - runner:
                concurrency: 1
                times: 1
                type: constant
              sla:
                failure_rate:
                  max: 0
      nova:
        DEFAULT:
          scheduler_default_filters: "RetryFilter,AvailabilityZoneFilter,RamFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter"
          debug: true
          config_drive_cdrom: false
          config_drive_format: "vfat"
          force_config_drive: true
        vnc:
          novncproxy_base_url: http://ctrl01s:30608/vnc_auto.html
        libvirt:
          rbd_user: "cinder"
          rbd_secret_uuid: "582393ff-9a5c-4a2e-ae0d-86ec18c36afc"
        scheduler:
          discover_hosts_in_cells_interval: 60
    endpoints:
      oslo_db_cell0:
        path: /nova_cell0
    pod:
      user:
        nova:
          uid: 42436
      replicas:
        api_metadata: 1
        osapi: 1
        conductor: 1
        consoleauth: 1
        scheduler: 1
        novncproxy: 1
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: nova
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: neutron
data:
  chart_name: neutron
  release: neutron
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: neutron-db-init
          type: job
          labels:
            application: neutron
            component: db-init
        - name: neutron-db-sync
          type: job
          labels:
            application: neutron
            component: db-sync
        - name: neutron-ks-endpoints
          type: job
          labels:
            application: neutron
            component: ks-endpoints
        - name: neutron-ks-service
          type: job
          labels:
            application: neutron
            component: ks-service
        - name: neutron-ks-user
          type: job
          labels:
            application: neutron
            component: ks-user
  values:
    labels:
      ovs:
          node_selector_key: stage-ovs-tenant
      agent:
        dhcp:
          node_selector_key: stage-ovs-tenant
        l3:
          node_selector_key: stage-ovs-tenant
        metadata:
          node_selector_key: stage-ovs-tenant
          # use config drive for medata service
          node_selector_value: "disabled"
      server:
        node_selector_key: stage-ovs-tenant
    images:
      tags:
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        neutron_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-neutron-server:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_user: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_service: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_endpoints: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        neutron_server: registry.cicd.stg.taco/pike/ubuntu-source-neutron-server:0.1.0
        neutron_dhcp: registry.cicd.stg.taco/pike/ubuntu-source-neutron-dhcp-agent:0.1.0
        neutron_metadata: registry.cicd.stg.taco/pike/ubuntu-source-neutron-metadata-agent:0.1.0
        neutron_l3: registry.cicd.stg.taco/pike/ubuntu-source-neutron-l3-agent:0.1.0
        neutron_openvswitch_agent: registry.cicd.stg.taco/pike/ubuntu-source-neutron-openvswitch-agent:0.1.0
        neutron_linuxbridge_agent: registry.cicd.stg.taco/pike/ubuntu-source-neutron-linuxbridge-agent:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    pod:
      replicas:
        server: 1
      user:
        neutron:
          uid: 42435
    network:
      auto_bridge_add:
        br-ex: veth0
      backend:
        - openvswitch
      share_namespaces: false
      interface:
        tunnel: br-data
    conf:
      neutron_sudoers: |
        # This sudoers file supports rootwrap-daemon for both Kolla and LOCI Images.
        Defaults !requiretty
        Defaults secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/var/lib/openstack/bin:/var/lib/kolla/venv/bin"
        neutron ALL = (root) NOPASSWD: /var/lib/kolla/venv/bin/neutron-rootwrap /etc/neutron/rootwrap.conf *, /var/lib/openstack/bin/neutron-rootwrap /etc/neutron/rootwrap.conf *, /var/lib/kolla/venv/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf, /var/lib/openstack/bin/neutron-rootwrap-daemon /etc/neutron/rootwrap.conf
      neutron:
        DEFAULT:
          debug: True
          core_plugin: ml2
          l3_ha: False
          # NOTE: change mtu to 9000 if jumbo frame is supported
          global_physnet_mtu: 1500
          service_plugins: router
          interface_driver: openvswitch
        agent:
          root_helper_daemon: sudo neutron-rootwrap-daemon /etc/neutron/rootwrap.conf
      plugins:
        ml2_conf:
          ml2:
            mechanism_drivers: openvswitch,l2population
            type_drivers: flat, vxlan
            tenant_network_types: vxlan
        openvswitch_agent:
          agent:
            tunnel_types: vxlan
            l2_population: True
            arp_responder: True
          ovs:
            bridge_mappings: "external:br-ex"
          securitygroup:
            firewall_driver: openvswitch
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: neutron
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: cinder
data:
  chart_name: cinder
  release: cinder
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - name: cinder-bootstrap
          type: job
          labels:
            application: cinder
            component: bootstrap
        - name: cinder-db-init
          type: job
          labels:
            application: cinder
            component: db-init
        - name: cinder-db-sync
          type: job
          labels:
            application: cinder
            component: db-sync
        - name: cinder-ks-endpoints
          type: job
          labels:
            application: cinder
            component: ks-endpoints
        - name: cinder-ks-service
          type: job
          labels:
            application: cinder
            component: ks-service
        - name: cinder-ks-user
          type: job
          labels:
            application: cinder
            component: ks-user
  values:
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    images:
      tags:
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        cinder_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-cinder-api:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_user: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_service: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_endpoints: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        cinder_api: registry.cicd.stg.taco/pike/ubuntu-source-cinder-api:0.1.0
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        cinder_scheduler: registry.cicd.stg.taco/pike/ubuntu-source-cinder-scheduler:0.1.0
        cinder_volume: registry.cicd.stg.taco/pike/ubuntu-source-cinder-volume:0.1.0
        cinder_volume_usage_audit: registry.cicd.stg.taco/pike/ubuntu-source-cinder-volume:0.1.0
        cinder_storage_init: registry.cicd.stg.taco/ceph-daemon:tag-build-master-jewel-ubuntu-16.04
        cinder_backup: registry.cicd.stg.taco/pike/ubuntu-source-cinder-backup:0.1.0
        cinder_backup_storage_init: registry.cicd.stg.taco/ceph-daemon:tag-build-master-jewel-ubuntu-16.04
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    pod:
      user:
        cinder:
          uid: 42407
      replicas:
        api: 1
        backup: 1
        scheduler: 1
        volume: 1
    conf:
      ceph:
        enabled: true
        admin_keyring: "AQCqEUVY3RvrBRAABmhtxK2MvD/whiiVZ5Jkww=="
      cinder:
        DEFAULT:
          debug: true
          backup_driver: cinder.backup.drivers.ceph
          backup_ceph_user: "cinder"
          backup_ceph_pool: "backups-test"
      backends:
        rbd1:
          volume_driver: cinder.volume.drivers.rbd.RBDDriver
          volume_backend_name: rbd1
          rbd_ceph_conf: "/etc/ceph/ceph.conf"
          rbd_flatten_volume_from_snapshot: false
          rbd_max_clone_depth: 5
          rbd_store_chunk_size: 4
          rados_connect_timeout: -1
          rbd_user: "cinder"
          rbd_pool: "volumes-test"
          rbd_secret_uuid: "582393ff-9a5c-4a2e-ae0d-86ec18c36afc"
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: cinder
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: heat
data:
  chart_name: heat
  release: heat
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
    pre:
      delete:
        - type: job
          labels:
            application: heat
            component: bootstrap
        - type: job
          labels:
            application: heat
            component: db-init
        - type: job
          labels:
            application: heat
            component: db-sync
        - type: job
          labels:
            application: heat
            component: ks-user
        - type: job
          labels:
            application: heat
            component: ks-service
        - type: job
          labels:
            application: heat
            component: ks-endpoints
  values:
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    images:
      tags:
        test: registry.cicd.stg.taco/pike/ubuntu-source-rally:0.1.0
        bootstrap: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        heat_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-heat-api:0.1.0
        db_drop: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_user: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_service: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        ks_endpoints: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        heat_api: registry.cicd.stg.taco/pike/ubuntu-source-heat-api:0.1.0
        heat_cfn: registry.cicd.stg.taco/pike/ubuntu-source-heat-api:0.1.0
        heat_cloudwatch: registry.cicd.stg.taco/pike/ubuntu-source-heat-api:0.1.0
        heat_engine: registry.cicd.stg.taco/pike/ubuntu-source-heat-engine:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
      pull_policy: Always
    pod:
      user:
        heat:
          uid: 42418
      replicas:
        api: 1
        cfn: 1
        cloudwatch: 1
        engine: 1
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: heat
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: horizon
data:
  chart_name: horizon
  release: horizon
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    replicas: 1
    labels:
      node_selector_key: stage-ovs-tenant
      node_selector_value: enabled
    images:
      tags:
        db_init: registry.cicd.stg.taco/pike/ubuntu-source-horizon:0.1.0
        horizon_db_sync: registry.cicd.stg.taco/pike/ubuntu-source-horizon:0.1.0
        horizon: registry.cicd.stg.taco/pike/ubuntu-source-horizon:0.1.0
        dep_check: registry.cicd.stg.taco/kubernetes-entrypoint:v0.3.0
        test: registry.cicd.stg.taco/pike/ubuntu-source-horizon:develop
      pull_policy: Always
    pod:
      replicas:
        server: 1
    conf:
      horizon:
        local_settings:
          config:
            openstack_neutron_network:
              enable_router: "True"
              enable_quotas: "True"
              enable_ipv6: "False"
              enable_distributed_router: "False"
              enable_ha_router: "True"
              enable_lb: "True"
              enable_firewall: "False"
              enable_vpn: "False"
              enable_fip_topology_check: "True"
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm
    subpath: horizon
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: ldap
data:
  chart_name: ldap
  release: ldap
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    storage:
      pvc:
        enabled: false
        size: 1Gi
        class_name: ceph
      host:
        data_path: /data/openstack-helm/ldap
        config_path: /data/openstack-helm/config
    bootstrap:
      enabled: enabled
    data:
      sample: |
        dn: ou=People,dc=cluster,dc=local
        objectclass: organizationalunit
        ou: People
        description: We the People

        # NOTE: Password is "password" without quotes
        dn: uid=taco,ou=People,dc=cluster,dc=local
        objectClass: inetOrgPerson
        objectClass: top
        objectClass: posixAccount
        objectClass: shadowAccount
        objectClass: person
        sn: taco
        cn: taco
        uid: taco
        userPassword: {SSHA}l6OsaU3ABgWFdUAKvnhxohExurSDKIO2
        description: SSHA
        gidNumber: 1000
        uidNumber: 1493
        homeDirectory: /home/taco
        mail: taco@cluster.local
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: ldap
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: elasticsearch
data:
  chart_name: elasticsearch
  release: elasticsearch
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    conf:
      elasticsearch:
        env:
          java_opts: "-Xms256m -Xmx256m"
    storage:
      elasticsearch:
        enabled: false
        pvc:
          name: pvc-elastic
          access_mode: [ "ReadWriteOnce" ]
        requests:
          storage: 2000Gi
        storage_class: ceph
      filesystem_repository:
        enabled: false
        pvc:
          name: pvc-snapshots
          access_mode: ReadOnlyMany
        requests:
          storage: 200Gi
        storage_class: ceph
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: elasticsearch
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: fluent-logging
data:
  chart_name: fluent-logging
  release: fluent-logging
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    dependencies:
      static:
        elasticsearch-template:
          services:
            - endpoint: internal
              service: elasticsearch
        fluentbit:
          jobs:
            - elasticsearch-template
          services:
            - endpoint: internal
              service: elasticsearch
    conf:
      fluentbit:
      - service:
          header: service
          Flush: 5
          Daemon: Off
          Log_Level: info
          Parsers_File: parsers.conf
    
      - containers_tail:
          header: input
          Name: tail
          Tag: kube.*
          Path: /var/log/containers/*.log
          Parser: docker
          DB: /var/log/flb_kube.db
          Mem_Buf_Limit: 5MB
      - kube_filter:
          header: filter
          Name: kubernetes
          Match: kube.*
          Merge_JSON_Log: On
    
      - syslog_tail:
          header: input
          Name: tail
          Tag: syslog.*
          Path: /var/log/syslog
          Parser: syslog-kubelet
          DB: /var/log/flb_kube.db
          Mem_Buf_Limit: 5MB
    
      - cluster_filter:
          header: filter
          Name: record_modifier
          Match: "*"
          record: cluster somewhere-cluster
          record: tag kube.for.test.only
    
      - elasticsearch_docker:
          header: output
          Name: es
          Match: "kube.*"
          Host: elasticsearch-logging
          Port: 80
          Logstash_Format: On
#          Logstash_Prefix: kube
          HTTP_User: taco
          HTTP_Passwd: password
          Type: kube
      - elasticsearch_syslog:
          header: output
          Name: es
          Match: "syslog.*"
          Host: elasticsearch-logging
          Port: 80
          Logstash_Format: On
          Logstash_Prefix: syslog
          HTTP_User: taco
          HTTP_Passwd: password
          Type: syslog
      parsers:
      - docker:
          header: parser
          Name: docker
          Format: json
          Time_Key: time
          Time_Format: '%Y-%m-%dT%H:%M:%S.%L'
          Time_Keep: On
      - syslog-kubelet:
          header: parser
          Name: syslog-kubelet
          Format: regex
          Regex: '^(?<time>.*[0-9]{2}:[0-9]{2}:[0-9]{2}) (?<host>[^ ]*) (?<app>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? (?<log>.+)$'
          Time_Key: time
          Time_Format: '%b %e %H:%M:%S'
          Time_Offset: '+0900'
          Time_Keep: On
      templates:
        fluent:
          template: "logstash-*"
          index_patterns: "logstash-*"
          settings:
            number_of_shards: 5
            number_of_replicas: 1
          mappings:
            fluent:
              properties:
                kubernetes:
                  properties:
                    container_name:
                      type: keyword
                    docker_id:
                      type: keyword
                    host:
                      type: keyword
                    labels:
                      properties:
                        app:
                          type: keyword
                        application:
                          type: keyword
                        component:
                          type: keyword
                        release_group:
                          type: keyword
                    namespace_name:
                      type: keyword
                    pod_id:
                      type: keyword
                    pod_name:
                     type: keyword
                log:
                  type: text
        syslog:
          template: "syslog-*"
          index_patterns: "syslog-*"
          settings:
            number_of_shards: 5
            number_of_replicas: 1
          mappings:
            syslog:
              properties:
                cluster:
                  type: keyword
                app:
                  type: keyword
                host:
                  type: keyword
                pid:
                  type: integer
                log:
                  type: text
    manifests:
      configmap_bin: true
      configmap_etc: true
      deployment_fluentd: false
      daemonset_fluentbit: true
      job_image_repo_sync: true
      helm_tests: true
      monitoring:
        prometheus:
          configmap_bin: true
          deployment_exporter: true
          service_exporter: true
      secret_elasticsearch: true
      service_fluentd: false
      job_elasticsearch_template: true

  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: fluent-logging
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: kibana 
data:
  chart_name: kibana
  release: kibana
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    network:
      kibana:
        ingress:
          public: true
          proxy_body_size: 1024M
        node_port:
          enabled: true
          port: 30001
        port: 5601
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: kibana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus 
data:
  chart_name: prometheus
  release: prometheus
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    pod:
      replicas:
        prometheus: 3
    storage:
      enabled: false
      pvc:
        name: prometheus-pvc
        access_mode: [ "ReadWriteOnce" ]
      requests:
        storage: 5Gi
      storage_class: ceph
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: prometheus
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-alertmanager 
data:
  chart_name: prometheus-alertmanager
  release: prometheus-alertmanager
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    storage:
      enabled: false
      requests:
        storage: 5Gi
      storage_class: ceph
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: prometheus-alertmanager
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-kube-state-metrics 
data:
  chart_name: prometheus-kube-state-metrics
  release: prometheus-kube-state-metrics
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    dummy: dummy
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: prometheus-kube-state-metrics
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-node-exporter 
data:
  chart_name: prometheus-node-exporter
  release: prometheus-node-exporter
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    labels:
      node_selector_key: node-exporter
      node_selector_value: enabled
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: prometheus-node-exporter
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: prometheus-openstack-exporter 
data:
  chart_name: prometheus-openstack-exporter
  release: prometheus-openstack-exporter
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:
    dummy: dummy
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: prometheus-openstack-exporter
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: grafana 
data:
  chart_name: grafana
  release: grafana
  namespace: openstack
  install:
    no_hooks: false
  upgrade:
    no_hooks: false
  values:

    network:
      grafana:
        node_port:
          enabled: true
          port: 30009
  source:
    type: git
    location: https://tde.sktelecom.com/stash/scm/openstack/openstack-helm-infra
    subpath: grafana
    reference: master
  dependencies:
    - helm-toolkit
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: openstack-services
data:
  description: "Openstack Services"
  sequenced: False
  chart_group:
    - ceph-client
    - ingress
    - etcd
    - rabbitmq
    - memcached
    - mariadb
    - libvirt
    - openvswitch
    - keystone
    - glance
    - cinder
    - heat
    - nova
    - neutron
    - horizon
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: monitoring-infra
data:
  description: "Logging Infrastructure"
  sequenced: False
  chart_group:
    - grafana
    - prometheus
    - prometheus-alertmanager
    - prometheus-kube-state-metrics
    - prometheus-node-exporter
    - prometheus-openstack-exporter
---
schema: armada/ChartGroup/v1
metadata:
  schema: metadata/Document/v1
  name: logging-infra
data:
  description: "Logging Infrastructure"
  sequenced: False
  chart_group:
    - ldap
    - elasticsearch
    - fluent-logging
    - kibana
---
schema: armada/Manifest/v1
metadata:
  schema: metadata/Document/v1
  name: single-manifest
data:
  release_prefix: single
  chart_groups:
    - openstack-services
    - logging-infra
    - monitoring-infra
